body {
    font-family: 'Noto Sans KR', sans-serif;
    background-color: #f9f9f9;
    margin: 0;
    padding: 20px;
    color: #333;
}

.quiz-container {
    max-width: 800px;
    margin: 0 auto;
    background: #fff;
    padding: 30px;
    border-radius: 10px;
    box-shadow: 0 4px 12px rgba(0,0,0,0.1);
}

h1 {
    text-align: center;
    font-size: 2.5em;
    margin-bottom: 30px;    // ../Both/ 경로에 gemini_questions.json 파일이 존재한다고 가정합니다.
    fetch('../Both/gemini_questions.json')
        .then(response => response.json())
        .then(data => {
            const quizDiv = document.getElementById("quiz");
            data.forEach((item, index) => {
                let html = `<div class="question-card">`;
                // 문제 헤더 (문제 번호)
                html += `<div class="question-header">문제 ${index + 1}</div>`;
                // 문제 본문
                if(item.question) {
                    html += `<div class="question-text">${item.question}</div>`;
                }
                // 선택지 (options)
                if(item.options) {
                    html += `<ul class="options">`;
                    for (const [key, value] of Object.entries(item.options)) {
                        html += `<li><strong>${key}.</strong> ${value}</li>`;
                    }
                    html += `</ul>`;
                }
                // 해설/정답/출처 영역 (초기엔 숨김)
                html += `<div class="answer-info hidden">
                            ${item.answer ? `<p><strong>정답:</strong> ${item.answer}</p>` : ''}
                            ${item.explanation ? `<p><strong>해설:</strong> ${item.explanation}</p>` : ''}
                            ${item.source ? `<p><strong>출처:</strong> ${item.source}</p>` : ''}
                         </div>`;
                // 해설 보기 버튼
                html += `<div class="button-container">
                            <button class="button reveal-btn" onclick="toggleAnswer(this)">해설 보기</button>
                         </div>`;
                html += `</div>`;
                quizDiv.innerHTML += html;
            });
        })
        .catch(error => {
            document.getElementById("quiz").innerText = "문제를 불러오지 못했습니다.";
            console.error(error);
        });
    
    // 해설 영역의 표시/숨김 전환 함수
    function toggleAnswer(button) {
        const answerInfo = button.parentElement.previousElementSibling;
        if(answerInfo.classList.contains('hidden')){
            answerInfo.classList.remove('hidden');
            button.innerText = "해설 숨기기";
        } else {
            answerInfo.classList.add('hidden');
            button.innerText = "해설 보기";
        }
    }
    color: #2c3e50;
}

.question-card {
    margin-bottom: 30px;
    padding-bottom: 20px;
    border-bottom: 2px solid #ccc;
}

.question-header {
    font-size: 1.6em;
    font-weight: bold;
    margin-bottom: 15px;
    color: #2c3e50;
}

.question-text {
    font-size: 1.1em;
    margin-bottom: 15px;
    line-height: 1.6;
}

.options {
    list-style-type: none;
    padding: 0;
    margin: 0 0 15px 20px;
}

.options li {
    background: #e7e7e7;
    padding: 10px;
    margin-bottom: 10px;
    border-radius: 5px;
    transition: background 0.3s;
}

.options li:hover {
    background: #d4d4d4;
}

.answer-info {
    background: #f0f0f0;
    padding: 15px;
    border-radius: 5px;
    margin-bottom: 10px;
    line-height: 1.6;
}

.answer-info p {
    margin: 8px 0;
}

.answer-info p strong {
    color: #e67e22;
}

.button-container {
    text-align: right;
    margin-top: 10px;
}

.button {
    background-color: #5cb85c;
    color: white;
    border: none;
    padding: 8px 16px;
    border-radius: 5px;
    cursor: pointer;
    transition: background 0.3s;
}

.button:hover {
    background-color: #4cae4c;
}

.hidden {
    display: none;
}